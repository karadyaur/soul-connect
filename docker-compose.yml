version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres-db-server
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: sc_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  sc-auth:
    build:
      context: .
      dockerfile: sc-auth/Dockerfile
    container_name: sc-auth
    depends_on:
      - postgres
    environment:
      SERVER_PORT: "50051"
      DB_SOURCE: postgresql://root:secret@postgres:5432/sc_db?sslmode=disable
    ports:
      - "50051:50051"
    networks:
      - backend

  sc-api-getaway:
    build:
      context: .
      dockerfile: sc-api-getaway/Dockerfile
    container_name: api-gateway
    depends_on:
      - postgres
      - sc-auth
    environment:
      SERVER_PORT: "8000"
      DB_SOURCE: postgresql://root:secret@postgres:5432/sc_db?sslmode=disable
      GRPC_AUTH_PORT: sc-auth:50051
    ports:
      - "8000:8000"
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: sc-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka-broker:
    image: confluentinc/cp-kafka:7.6.0
    container_name: sc-kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - backend

  sc-kafka:
    build:
      context: .
      dockerfile: sc-kafka/Dockerfile
    container_name: sc-kafka
    depends_on:
      - kafka-broker
    environment:
      KAFKA_BROKERS: kafka-broker:9092
      KAFKA_CLIENT_ID: sc-kafka
      KAFKA_TOPIC_POST_CREATED: post.created
      KAFKA_TOPIC_SUBSCRIPTION_CREATED: subscription.created
      KAFKA_TOPIC_NOTIFICATION: notification.created
      KAFKA_CONSUMER_POST_CREATED_GROUP: sc-post-consumers
      KAFKA_CONSUMER_SUBSCRIPTION_GROUP: sc-subscription-consumers
      KAFKA_CONSUMER_NOTIFICATION_GROUP: sc-notification-consumers
    networks:
      - backend

networks:
  backend:

volumes:
  pgdata:
